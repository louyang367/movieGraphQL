const typeDefs = `
type Query {
  nowPlaying(page: Int): MoviePage
  topRated(page: Int): MoviePage
  upcoming(page: Int): MoviePage
  movieById(id: String): DetailedMovie
  movieByTitle(title: String, page: Int): MoviePage
  movieByKeyword(keyword: String, page: Int): MoviePage
}

interface Movie {
  id: String!
  title: String!
  overview: String
}

type SummaryMovie implements Movie {
  id: String!
  title: String!
  overview: String
  backdrop: String
  releaseDate: String
	genreIds: [Int]
}

type MoviePage {
  movieList: [SummaryMovie]
  minDate: String
  maxDate: String
  totalPages: Int
  totalResults: Int
}

type DetailedMovie implements Movie {
  id: String!
  title: String!
  overview: String
  poster: String
  genres: String
  releaseDate: String
  voteAverage: Float
  voteCount: Int
  watchProviders: [WatchProvider]
}

# fragment ProviderFields on Character {
# }

enum providerType {
  Flatrate
  Rent
  Buy
}

type WatchProvider {
  type: providerType
  providers: [ProviderDetail]
}

type ProviderDetail {
  id: Int!
  name: String  
  logoURL: String
}
`;

export default typeDefs;